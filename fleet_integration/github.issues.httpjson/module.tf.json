{
  "//": "Generated by fleet-terraform-generator - DO NOT EDIT",
  "variable": {
    "access_token": {
      "type": "string",
      "description": "the GitHub Personal Access Token.",
      "sensitive": true,
      "nullable": false
    },
    "api_url": {
      "type": "string",
      "description": "The API URL without the path.",
      "default": "https://api.github.com",
      "nullable": false
    },
    "enable_request_tracer": {
      "type": "bool",
      "description": "The request tracer logs requests and responses to the agent's local file-system for debugging configurations. Enabling this request tracing compromises security and should only be used for debugging. See [documentation](https://www.elastic.co/guide/en/beats/filebeat/current/filebeat-input-httpjson.html#_request_tracer_filename) for details.",
      "default": null
    },
    "filter": {
      "type": "string",
      "description": "Indicates which sorts of issues to return. \nCan be one of - `assigned`, `created`, `mentioned`, `subscribed`, `repos`, `all`. \n`assigned` means issues assigned to you. `created` means issues created by you. `mentioned` means issues mentioning you. `subscribed` means issues you're subscribed to updates for. `all` or repos means all issues you can see, regardless of participation or creation.",
      "default": "all"
    },
    "fleet_agent_policy_id": {
      "type": "string",
      "description": "Agent policy ID to add the package policy to."
    },
    "fleet_data_stream_namespace": {
      "type": "string",
      "description": "Namespace to use for the data stream.",
      "default": "default"
    },
    "fleet_package_policy_description": {
      "type": "string",
      "description": "Description to use for the package policy.",
      "default": ""
    },
    "fleet_package_policy_name_suffix": {
      "type": "string",
      "description": "Suffix to append to the end of the package policy name.",
      "default": ""
    },
    "fleet_package_version": {
      "type": "string",
      "description": "Version of the github package to use.",
      "default": "2.5.0"
    },
    "http_client_timeout": {
      "type": "string",
      "description": "Duration before declaring that the HTTP client connection has timed out. Valid time units are ns, us, ms, s, m, h.",
      "default": "60s"
    },
    "interval": {
      "type": "string",
      "description": "Interval at which the alerts will be pulled. The value must be between 2m and 1h. Supported units for this parameter are h/m/s.",
      "default": "10m",
      "nullable": false
    },
    "labels": {
      "type": "string",
      "description": "A list of comma separated label names. Example - bug,ui,@high",
      "default": null
    },
    "owner": {
      "type": "string",
      "description": "The owner of GitHub Repository. If repository belongs to an organization, owner is name of the organization",
      "nullable": false
    },
    "preserve_original_event": {
      "type": "bool",
      "description": "Preserves a raw copy of the original event, added to the field `event.original`",
      "default": false,
      "nullable": false
    },
    "processors_yaml": {
      "type": "string",
      "description": "Processors are used to reduce the number of fields in the exported event or to enhance the event with metadata. \nThis executes in the agent before the logs are parsed. \nSee [Processors](https://www.elastic.co/guide/en/beats/filebeat/current/filtering-and-enhancing-data.html) for details.\n",
      "default": null
    },
    "proxy_url": {
      "type": "string",
      "description": "URL to proxy connections in the form of http\\[s\\]://<user>:<password>@<server name/ip>:<port>",
      "default": null
    },
    "repo": {
      "type": "string",
      "description": "The GitHub Repository. If not provided, alerts for all the repositories of the owner will be ingested",
      "default": null
    },
    "since": {
      "type": "string",
      "description": "Only show notifications updated after the given time are returned. This is a timestamp in ISO 8601 format - `YYYY-MM-DDTHH:MM:SSZ`.",
      "default": null
    },
    "ssl_yaml": {
      "type": "string",
      "description": "SSL configuration options. See [documentation](https://www.elastic.co/guide/en/beats/filebeat/current/configuration-ssl.html#ssl-common-config) for details.",
      "default": null
    },
    "state": {
      "type": "string",
      "description": "Indicates the state of the issues to return.",
      "default": "all"
    },
    "tags": {
      "type": "list(string)",
      "default": [
        "forwarded",
        "github-issues"
      ],
      "nullable": false
    }
  },
  "output": {
    "id": {
      "description": "Package policy ID",
      "value": "${module.fleet_package_policy.id}"
    }
  },
  "module": {
    "fleet_package_policy": {
      "agent_policy_id": "${var.fleet_agent_policy_id}",
      "all_data_streams": [
        "audit",
        "code_scanning",
        "dependabot",
        "issues",
        "secret_scanning"
      ],
      "all_policy_template_inputs": [
        "github-httpjson",
        "github-azure-eventhub"
      ],
      "data_stream": "issues",
      "data_stream_variables_json": "${jsonencode({\n  access_token = var.access_token\n  api_url = var.api_url\n  filter = var.filter\n  http_client_timeout = var.http_client_timeout\n  interval = var.interval\n  labels = var.labels\n  owner = var.owner\n  preserve_original_event = var.preserve_original_event\n  processors = var.processors_yaml\n  proxy_url = var.proxy_url\n  repo = var.repo\n  since = var.since\n  ssl = var.ssl_yaml\n  state = var.state\n  tags = var.tags\n})}",
      "description": "${var.fleet_package_policy_description}",
      "input_type": "httpjson",
      "input_variables_json": "${jsonencode({\n  enable_request_tracer = var.enable_request_tracer\n})}",
      "namespace": "${var.fleet_data_stream_namespace}",
      "package_name": "github",
      "package_policy_name": "github-issues-${var.fleet_data_stream_namespace}${var.fleet_package_policy_name_suffix}",
      "package_version": "${var.fleet_package_version}",
      "policy_template": "github",
      "source": "../../fleet_package_policy"
    }
  }
}
