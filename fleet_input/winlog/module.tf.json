{
  "//": "Generated by fleet-terraform-generator - DO NOT EDIT",
  "variable": {
    "channel": {
      "type": "string",
      "description": "Name of Windows event log channel (eg. Microsoft-Windows-PowerShell/Operational)",
      "nullable": false
    },
    "custom_yaml": {
      "type": "string",
      "description": "YAML configuration options for winlog input. Be careful, this may break the integration.",
      "default": "# Winlog configuration example\n#processors:\n#  - drop_event.when.not.or:\n#    - equals.winlog.event_id: '903'\n#    - equals.winlog.event_id: '1024'"
    },
    "data_stream_dataset": {
      "type": "string",
      "description": "Dataset to write data to. Changing the dataset will send the data to a different index. You can't use `-` in the name of a dataset and only valid characters for [Elasticsearch index names](https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-index_.html).",
      "default": "winlog.winlog",
      "nullable": false
    },
    "event_id": {
      "type": "string",
      "description": "A list of included and excluded (blocked) event IDs. The value is a comma-separated list.  The accepted values are single event IDs to include (e.g. 4624), a range of event IDs to include (e.g. 4700-4800),  and single event IDs to exclude (e.g. -4735).  Limit 22 clauses, lower in some situations. See integration documentation for more details.",
      "default": null
    },
    "fleet_agent_policy_id": {
      "type": "string",
      "description": "Agent policy ID to add the package policy to."
    },
    "fleet_data_stream_namespace": {
      "type": "string",
      "description": "Namespace to use for the data stream.",
      "default": "default"
    },
    "fleet_package_policy_description": {
      "type": "string",
      "description": "Description to use for the package policy.",
      "default": ""
    },
    "fleet_package_policy_name_suffix": {
      "type": "string",
      "description": "Suffix to append to the end of the package policy name.",
      "default": ""
    },
    "fleet_package_version": {
      "type": "string",
      "description": "Version of the winlog package to use.",
      "default": "2.2.0"
    },
    "ignore_older": {
      "type": "string",
      "description": "If this option is specified, events that are older than the specified amount of time are ignored. Valid time units are \"ns\", \"us\" (or \"Âµs\"), \"ms\", \"s\", \"m\", \"h\".",
      "default": "72h"
    },
    "language": {
      "type": "string",
      "description": "The language ID the events will be rendered in. The language will be forced regardless of the system language. A complete list of language IDs can be found [here](https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-lcid/a9eac961-e77d-41a6-90a5-ce1a8b0cdb9c). It defaults to `0`, which indicates to use the system language. E.g.: `0x0409` for `en-US`",
      "default": 0
    },
    "pipeline": {
      "type": "string",
      "description": "The Ingest Node pipeline ID to be used by the integration.\n",
      "default": null
    },
    "preserve_original_event": {
      "type": "bool",
      "description": "Preserves a raw copy of the original XML event, added to the field `event.original`",
      "default": false,
      "nullable": false
    },
    "providers_names": {
      "type": "list(string)",
      "description": "A list of providers (source names) to include.",
      "default": null
    },
    "tags": {
      "type": "list(string)",
      "description": "Tags to include in the published event",
      "default": null
    }
  },
  "output": {
    "id": {
      "description": "Package policy ID",
      "value": "${module.fleet_package_policy.id}"
    }
  },
  "module": {
    "fleet_package_policy": {
      "agent_policy_id": "${var.fleet_agent_policy_id}",
      "all_data_streams": [],
      "all_policy_template_inputs": [],
      "data_stream": "",
      "data_stream_variables_json": "${jsonencode({\n  channel = var.channel\n  custom = var.custom_yaml\n  \"data_stream.dataset\" = var.data_stream_dataset\n  event_id = var.event_id\n  ignore_older = var.ignore_older\n  language = var.language\n  pipeline = var.pipeline\n  preserve_original_event = var.preserve_original_event\n  providers = var.providers_names\n  tags = var.tags\n})}",
      "description": "${var.fleet_package_policy_description}",
      "input_type": "winlog",
      "namespace": "${var.fleet_data_stream_namespace}",
      "package_name": "winlog",
      "package_policy_name": "winlog-${var.fleet_data_stream_namespace}${var.fleet_package_policy_name_suffix}",
      "package_version": "${var.fleet_package_version}",
      "policy_template": "winlogs",
      "source": "../../fleet_package_policy"
    }
  }
}
