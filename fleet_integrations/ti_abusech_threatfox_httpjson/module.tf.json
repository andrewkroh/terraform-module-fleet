{
  "//": "Generated by fleet-terraform-generator - DO NOT EDIT",
  "variable": {
    "enable_request_tracer": {
      "type": "bool",
      "description": "The request tracer logs requests and responses to the agent's local file-system for debugging configurations. Enabling this request tracing compromises security and should only be used for debugging. See [documentation](https://www.elastic.co/guide/en/beats/filebeat/current/filebeat-input-httpjson.html#_request_tracer_filename) for details.",
      "default": null
    },
    "fleet_agent_policy_id": {
      "type": "string",
      "description": "Agent policy ID to add the package policy to."
    },
    "fleet_data_stream_namespace": {
      "type": "string",
      "description": "Namespace to use for the data stream.",
      "default": "default"
    },
    "fleet_package_version": {
      "type": "string",
      "description": "Version of the ti_abusech package to use.",
      "default": "1.12.0"
    },
    "http_client_timeout": {
      "type": "string",
      "default": "30s"
    },
    "initial_interval": {
      "type": "string",
      "description": "How far back to look for indicators the first time the agent is started. Defaults to 30 days, can be any number between 1-90.",
      "default": "30",
      "nullable": false
    },
    "interval": {
      "type": "string",
      "default": "24h",
      "nullable": false
    },
    "preserve_original_event": {
      "type": "bool",
      "description": "Preserves a raw copy of the original event, added to the field `event.original`",
      "default": false,
      "nullable": false
    },
    "processors_yaml": {
      "type": "string",
      "description": "Processors are used to reduce the number of fields in the exported event or to enhance the event with metadata. This executes in the agent before the logs are parsed. See [Processors](https://www.elastic.co/guide/en/beats/filebeat/current/filtering-and-enhancing-data.html) for details.\n",
      "default": null
    },
    "proxy_url": {
      "type": "string",
      "description": "URL to proxy connections in the form of http\\[s\\]://<user>:<password>@<server name/ip>:<port>",
      "default": null
    },
    "ssl_yaml": {
      "type": "string",
      "default": null
    },
    "tags": {
      "type": "list(string)",
      "default": [
        "forwarded",
        "abusech-threatfox"
      ],
      "nullable": false
    },
    "url": {
      "type": "string",
      "default": "https://threatfox-api.abuse.ch/api/v1/",
      "nullable": false
    }
  },
  "output": {
    "id": {
      "description": "Package policy ID",
      "value": "${module.fleet_package_policy.id}"
    }
  },
  "module": {
    "fleet_package_policy": {
      "agent_policy_id": "${var.fleet_agent_policy_id}",
      "all_data_streams": [
        "malware",
        "malwarebazaar",
        "threatfox",
        "url"
      ],
      "data_stream": "threatfox",
      "data_stream_variables_json": "${jsonencode({\n  http_client_timeout = var.http_client_timeout\n  initial_interval = var.initial_interval\n  interval = var.interval\n  preserve_original_event = var.preserve_original_event\n  processors = var.processors_yaml\n  proxy_url = var.proxy_url\n  ssl = var.ssl_yaml\n  tags = var.tags\n  url = var.url\n})}",
      "input_type": "httpjson",
      "input_variables_json": "${jsonencode({\n  enable_request_tracer = var.enable_request_tracer\n})}",
      "namespace": "${var.fleet_data_stream_namespace}",
      "package_name": "ti_abusech",
      "package_policy_name": "ti_abusech-threatfox-${var.fleet_data_stream_namespace}",
      "package_version": "${var.fleet_package_version}",
      "policy_template": "ti_abusech",
      "source": "../../fleet_package_policy"
    }
  }
}
